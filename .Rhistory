BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea + Neighborhood
, data = train_new)
#summary(b0)
summary(b0)$r.squared
anova(v1,b0)
AIC(v1,b0)
treshold_vif(summary(b0)$r.squared)
vif(b0) # High vif-> Highly correlated predictor -> wont add to the model
b1<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual
, data = train_new)
#summary(b1)
summary(b1)$r.squared
anova(n0,b1)
AIC(n0,b1)
treshold_vif(summary(b1)$r.squared)
vif(b1)
# check interactions
b11<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea)*ExterQual
, data = train_new)
#summary(b11)
summary(b11)$r.squared
anova(b1,b11) # the model is better with interactions but for explainability reasons we will not consider the interactions
AIC(b1,b11)
b2<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual
, data = train_new)
#summary(b2)
summary(b2)$r.squared
anova(b1,b2)
AIC(b1,b2)
treshold_vif(summary(b2)$r.squared)
vif(b2)
# interactions
b21<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual) *BsmtQual
, data = train_new)
#summary(b21)
summary(b21)$r.squared
anova(b2,b21) #  better with interaction
AIC(b2,b21)
anova(b11,b21) # but worse than b11
b3<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual
, data = train_new)
#summary(b3)
summary(b3)$r.squared
anova(b2,b3)
AIC(b2,b3)
treshold_vif(summary(b3)$r.squared)
vif(b3)
#with interactions
b31<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual)* KitchenQual
, data = train_new)
#summary(b31)
summary(b31)$r.squared
anova(b3,b31) #  better model with interactions but we will not consider them for explainability pourposes
AIC(b3,b31)
b4<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+ GarageFinish
, data = train_new)
#summary(b4)
summary(b4)$r.squared
anova(b3,b4) # not better model -> we dont use this variable
AIC(b3,b4)
treshold_vif(summary(b4)$r.squared)
vif(b4)
b5<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual + FireplaceQu
, data = train_new)
#summary(b5)
summary(b5)$r.squared
anova(b3,b5) # not better model
AIC(b3,b5)
treshold_vif(summary(b5)$r.squared)
vif(b5)
b6<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+Foundation
, data = train_new)
#summary(b6)
summary(b6)$r.squared
anova(b3,b6)
AIC(b3,b6)
treshold_vif(summary(b6)$r.squared)
vif(b6) # we dont add it because highly correlated
b7<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType
, data = train_new)
#summary(b7)
summary(b7)$r.squared
anova(b3,b7)
AIC(b3,b7)
treshold_vif(summary(b7)$r.squared)
vif(b7)
# interactions
b71<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea)*GarageType +ExterQual + BsmtQual + KitchenQual
, data = train_new)
#summary(b71)
summary(b71)$r.squared
anova(b7,b71) # better model
AIC(b7,b71)
treshold_vif(summary(b71)$r.squared)
b8<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+MSSubClass
, data = train_new)
#summary(b8)
summary(b8)$r.squared
anova(b7,b8) # not better model
AIC(b7,b8)
treshold_vif(summary(b8)$r.squared)
vif(b8) # highly correlated
b9<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+BsmtFinType1
, data = train_new)
#summary(b9)
summary(b9)$r.squared
anova(b7,b9)  # not better model
AIC(b7,b9)
treshold_vif(summary(b9)$r.squared)
b10<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+f.LotArea
, data = train_new)
#summary(b7)
summary(b7)$r.squared
anova(b3,b7)
AIC(b3,b7)
treshold_vif(summary(b7)$r.squared)
vif(b7)
AIC(b7,b71,b3,b31,b2,b21,b1,b11)
# now we have done a forward stepwise, we can see if we need all the variables doing a backwards stepwise, we can see that in the model: LotFrontage PoolArea and GarageType are less influental, for better explainability we will not consider them in our model.
final_model<-b3
#names(train_new)
b0<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea + Neighborhood
, data = train_new)
#summary(b0)
summary(b0)$r.squared
anova(v1,b0)
AIC(v1,b0)
treshold_vif(summary(b0)$r.squared)
vif(b0) # High vif-> Highly correlated predictor -> wont add to the model
b1<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual
, data = train_new)
#summary(b1)
summary(b1)$r.squared
anova(n0,b1)
AIC(n0,b1)
treshold_vif(summary(b1)$r.squared)
vif(b1)
# check interactions
b11<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea)*ExterQual
, data = train_new)
#summary(b11)
summary(b11)$r.squared
anova(b1,b11) # the model is better with interactions but for explainability reasons we will not consider the interactions
AIC(b1,b11)
b2<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual
, data = train_new)
#summary(b2)
summary(b2)$r.squared
anova(b1,b2)
AIC(b1,b2)
treshold_vif(summary(b2)$r.squared)
vif(b2)
# interactions
b21<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual) *BsmtQual
, data = train_new)
#summary(b21)
summary(b21)$r.squared
anova(b2,b21) #  better with interaction
AIC(b2,b21)
anova(b11,b21) # but worse than b11
b3<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual
, data = train_new)
#summary(b3)
summary(b3)$r.squared
anova(b2,b3)
AIC(b2,b3)
treshold_vif(summary(b3)$r.squared)
vif(b3)
#with interactions
b31<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual)* KitchenQual
, data = train_new)
#summary(b31)
summary(b31)$r.squared
anova(b3,b31) #  better model with interactions but we will not consider them for explainability pourposes
AIC(b3,b31)
b4<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+ GarageFinish
, data = train_new)
#summary(b4)
summary(b4)$r.squared
anova(b3,b4) # not better model -> we dont use this variable
AIC(b3,b4)
treshold_vif(summary(b4)$r.squared)
vif(b4)
b5<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual + FireplaceQu
, data = train_new)
#summary(b5)
summary(b5)$r.squared
anova(b3,b5) # not better model
AIC(b3,b5)
treshold_vif(summary(b5)$r.squared)
vif(b5)
b6<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+Foundation
, data = train_new)
#summary(b6)
summary(b6)$r.squared
anova(b3,b6)
AIC(b3,b6)
treshold_vif(summary(b6)$r.squared)
vif(b6) # we dont add it because highly correlated
b7<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType
, data = train_new)
#summary(b7)
summary(b7)$r.squared
anova(b3,b7)
AIC(b3,b7)
treshold_vif(summary(b7)$r.squared)
vif(b7)
# interactions
b71<- lm(log(SalePrice) ~ (LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea)*GarageType +ExterQual + BsmtQual + KitchenQual
, data = train_new)
#summary(b71)
summary(b71)$r.squared
anova(b7,b71) # better model
AIC(b7,b71)
treshold_vif(summary(b71)$r.squared)
b8<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+MSSubClass
, data = train_new)
#summary(b8)
summary(b8)$r.squared
anova(b7,b8) # not better model
AIC(b7,b8)
treshold_vif(summary(b8)$r.squared)
vif(b8) # highly correlated
b9<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+BsmtFinType1
, data = train_new)
#summary(b9)
summary(b9)$r.squared
anova(b7,b9)  # not better model
AIC(b7,b9)
treshold_vif(summary(b9)$r.squared)
b10<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+f.LotArea
, data = train_new)
#summary(b7)
summary(b7)$r.squared
anova(b3,b7)
AIC(b3,b7)
treshold_vif(summary(b7)$r.squared)
vif(b7)
AIC(b7,b71,b3,b31,b2,b21,b1,b11)
# now we have done a forward stepwise, we can see if we need all the variables doing a backwards stepwise, we can see that in the model: LotFrontage PoolArea and GarageType are less influental, for better explainability we will not consider them in our model.
final_model<-b3
results <- data.frame(Model = c("Model with train_new sample",
"Model with test_new sample"),
RSQRT = round(c(RSQUARE(exp(fitted(final_model)), train_new$SalePrice),
RSQUARE(exp(predict(final_model, newdata = test_new)), test_new$SalePrice)),2),
RMSE = round(c(rmse(exp(fitted(final_model)), train_new$SalePrice),
rmse(exp(predict(final_model, newdata = test_new)), test_new$SalePrice)),2))
results
mean_hat <- mean(hatvalues(final_model));mean_hat
priori <- which(hatvalues(final_model)>4*mean_hat)
length(priori)
betas <- as.data.frame(dfbetas(final_model))
betas_cutoff <- 2 / sqrt(dim(train_new)[1]);betas_cutoff
influencePlot(final_model, id=list(n=3, method="noteworthy"))
llcoo <-c("1424","811","1183")
# residual outliers
llres <- which(abs(rstudent(final_model))>qnorm(0.995));length(llres)
llrem <- unique(c(rownames(train_new)[llres],llcoo)); length(llrem)
llremreg<-which(rownames(train_new)%in%llrem);llremreg
train_new<-train_new[-llremreg,]
final_modelp <- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType
, data = train_new)
summary(final_modelp)
final_modelp <- step( final_modelp, k=log(nrow(train_new)))
par(mfrow=c(2,2))
plot(final_modelp)
coef_orig <- coef(final_model)
coef_filt <- coef(final_modelp)
#common variables
var_com <- intersect(names(coef_orig), names(coef_filt))
coef_orig <- coef_orig[var_com]
coef_filt <- coef_filt[var_com]
coef_comparison <- data.frame(Variable = names(coef_orig),
Original_coefficient = coef_orig,
Filtered_coefficient = coef_filt)
print(coef_comparison)
results <- data.frame(Model = c("Model with train_new sample",
"Model with test_new sample"),
RSQRT = round(c(RSQUARE(exp(fitted(final_modelp)), train_new$SalePrice),
RSQUARE(exp(predict(final_modelp, newdata = test_new)), test_new$SalePrice)),2),
RMSE = round(c(rmse(exp(fitted(final_modelp)), train_new$SalePrice),
rmse(exp(predict(final_modelp, newdata = test_new)), test_new$SalePrice)),2))
results
#summary(b7)
summary(b7)$r.squared
anova(b3,b7)
AIC(b3,b7)
b10<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+f.LotArea
, data = train_new)
#summary(b7)
summary(b7)$r.squared
anova(b7,b10)
b7<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType
, data = train_new)
b10<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+f.LotArea
, data = train_new)
#summary(b7)
summary(b7)$r.squared
anova(b7,b10)
#summary(b10)
summary(b10)$r.squared
b11<- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType+HasPorch_binary
, data = train_new)
#summary(b11)
summary(b11)$r.squared
anova(b7,b11) # not better model
AIC(b7,b11)
AIC(b7,b11)
treshold_vif(summary(b11)$r.squared)
vif(b11)
treshold_vif(summary(b11)$r.squared)
vif(b11)
AIC(b7,b11)
AIC(b7,b71,b3,b31,b2,b21,b1,b11)
AIC(b7,b11)
AIC(b7,b71,b3,b31,b2,b21,b1,b11)
# now we have done a forward stepwise, we can see if we need all the variables doing a backwards stepwise, we can see that in the model: LotFrontage PoolArea and GarageType are less influental, for better explainability we will not consider them in our model.
final_model<-b7
data.frame
results <- data.frame(Model = c("Model with train_new sample",
"Model with test_new sample"),
RSQRT = round(c(RSQUARE(exp(fitted(final_model)), train_new$SalePrice),
RSQUARE(exp(predict(final_model, newdata = test_new)), test_new$SalePrice)),2),
RMSE = round(c(rmse(exp(fitted(final_model)), train_new$SalePrice),
rmse(exp(predict(final_model, newdata = test_new)), test_new$SalePrice)),2))
results
mean_hat <- mean(hatvalues(final_model));mean_hat
priori <- which(hatvalues(final_model)>4*mean_hat)
length(priori)
mean_hat
priori
betas <- as.data.frame(dfbetas(final_model))
betas_cutoff <- 2 / sqrt(dim(train_new)[1]);betas_cutoff
influencePlot(final_model, id=list(n=3, method="noteworthy"))
llcoo <-c("1424","811","1183")
# residual outliers
llres <- which(abs(rstudent(final_model))>qnorm(0.995));length(llres)
llrem <- unique(c(rownames(train_new)[llres],llcoo)); length(llrem)
llremreg<-which(rownames(train_new)%in%llrem);llremreg
train_new<-train_new[-llremreg,]
final_modelp <- lm(log(SalePrice) ~ LotFrontage + log(LotArea) + OverallQual + OverallCond + YearBuilt +
BsmtFinSF1  + log(X1stFlrSF)+ X2ndFlrSF  +
BsmtFullBath + FullBath   + TotRmsAbvGrd+
KitchenAbvGr + Fireplaces + GarageCars  +
ScreenPorch + PoolArea +ExterQual + BsmtQual + KitchenQual+GarageType
, data = train_new)
summary(final_modelp)
final_modelp <- step( final_modelp, k=log(nrow(train_new)))
par(mfrow=c(2,2))
plot(final_modelp)
coef_orig <- coef(final_model)
coef_filt <- coef(final_modelp)
#common variables
var_com <- intersect(names(coef_orig), names(coef_filt))
coef_orig <- coef_orig[var_com]
coef_filt <- coef_filt[var_com]
coef_comparison <- data.frame(Variable = names(coef_orig),
Original_coefficient = coef_orig,
Filtered_coefficient = coef_filt)
print(coef_comparison)
results <- data.frame(Model = c("Model with train_new sample",
"Model with test_new sample"),
RSQRT = round(c(RSQUARE(exp(fitted(final_modelp)), train_new$SalePrice),
RSQUARE(exp(predict(final_modelp, newdata = test_new)), test_new$SalePrice)),2),
RMSE = round(c(rmse(exp(fitted(final_modelp)), train_new$SalePrice),
rmse(exp(predict(final_modelp, newdata = test_new)), test_new$SalePrice)),2))
results
summary(final_model)
par(mfrow=c(2,2))
plot(final_model)
coefficients
coefficients <- coef(final_model)
coefficients
AIC(b7,b71,b3,b31,b2,b21,b1,b11)
